{% extends 'base.html.twig' %}

{% block title %}{{ article.titre }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="text-red-500">{{ article.titre }}</h1>

        <table class="table table-bordered mt-4">
            <tbody>
                <tr>
                    <th>ID</th>
                    <td>{{ article.id }}</td>
                </tr>
                <tr>
                    <th>Contenu</th>
                    <td>{{ article.contenu|nl2br }}</td>
                </tr>
                <tr>
                    <th>Slug</th>
                    <td>{{ article.slug }}</td>
                </tr>
                <tr>
                    <th>Artiste</th>
                    <td>{{ article.artiste }}</td>
                </tr>
                <tr>
                    <th>Date de publication</th>
                    <td>{{ article.datePublication ? article.datePublication|date('d/m/Y à H:i') : '' }}</td>
                </tr>
            </tbody>
        </table>

        <div class="mb-3">
            <a href="{{ path('app_article_index') }}" class="btn btn-secondary">Retour à la liste</a>
            <button id="export-pdf-btn" class="btn btn-outline-dark ms-2" style="display: none;">
                Exporter en PDF
            </button>

           <div id="pdf-button-container" style="display: none;">
                <a id="open-pdf-button" href="#" class="btn btn-success ms-2" target="_blank" style="display: none;">
                    Ouvrir le PDF
                </a>
            </div>

            <p id="pdf-status" class="text-info mt-2" style="display: none;">Génération du PDF en cours...</p>

            {% if is_granted('ROLE_ADMIN') %}
                <a href="{{ path('app_article_edit', {'id': article.id}) }}" class="btn btn-warning">Modifier</a>
                {{ include('article/_delete_form.html.twig') }}
            {% endif %}
        </div>

        {% if deezerArtist is defined and deezerArtist %}
            <hr>
            <h3>🎧 Infos Deezer sur {{ deezerArtist.name }}</h3>
            <div class="d-flex align-items-center mb-3">
                <img src="{{ deezerArtist.image }}" alt="{{ deezerArtist.name }}" class="me-3 rounded" width="100">
                <a href="{{ deezerArtist.link }}" class="btn btn-primary" target="_blank">Voir sur Deezer</a>
            </div>

            {% if deezerArtist.topTracks is not empty %}
                <h5>Top titres :</h5>
                <ul>
                    {% for track in deezerArtist.topTracks %}
                        <li>{{ track.title }}</li>
                    {% endfor %}
                </ul>
            {% endif %}
        {% endif %}

        <hr>

        <h3 class="mt-5">Commentaires</h3>

        {% if article.commentaires is not empty %}
            <ul class="list-group mb-4">
                {% for commentaire in article.commentaires %}
                    <li class="list-group-item">
                        <strong>{{ commentaire.auteur.pseudo }}</strong>
                        <small class="text-muted">— {{ commentaire.createdAt|date('d/m/Y à H:i') }}</small>
                        <p class="mb-0 mt-1">{{ commentaire.contenu }}</p>

                        {% if commentaire.note is defined %}
                            <div class="mt-1">
                                Note :
                                {% for i in 1..5 %}
                                    {% if i <= commentaire.note %}
                                        ⭐
                                    {% else %}
                                        ☆
                                    {% endif %}
                                {% endfor %}
                                <small class="text-muted">({{ commentaire.note }}/5)</small>
                            </div>
                        {% endif %}

                        {% if app.user and commentaire.auteur == app.user %}
                            <form method="post" action="{{ path('app_commentaire_delete', {'id': commentaire.id}) }}" onsubmit="return confirm('Supprimer ce commentaire ?');">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete_comment_' ~ commentaire.id) }}">
                                <button class="btn btn-sm btn-outline-danger mt-2">Supprimer</button>
                            </form>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <p>Aucun commentaire pour le moment.</p>
        {% endif %}

        {% if commentaireForm is defined and commentaireForm is not null %}
            <h4>Ajouter un commentaire</h4>
            {{ form_start(commentaireForm) }}
                {{ form_row(commentaireForm.contenu) }}
                {{ form_row(commentaireForm.note) }}
                <button class="btn btn-primary">Envoyer</button>
            {{ form_end(commentaireForm) }}
        {% else %}
            <p class="mt-3"><a href="{{ path('app_login') }}">Connectez-vous</a> pour commenter cet article.</p>
        {% endif %}
    </div>
    <script>
  document.addEventListener('DOMContentLoaded', () => {
    const pdfUrl = "{{ asset('/exports/article_' ~ article.id ~ '.pdf') }}";
    const container = document.getElementById('pdf-button-container');
    const button = document.getElementById('open-pdf-button');
    const exportBtn = document.getElementById('export-pdf-btn');

    if (!container || !button || !exportBtn) return;

    // Vérification initiale si le PDF existe déjà
    fetch(pdfUrl, { method: 'HEAD' })
      .then(response => {
        if (response.ok) {
          button.href = pdfUrl;
          container.style.display = 'block';
          button.style.display = 'inline-block';
          exportBtn.style.display = 'none';
        } else {
          exportBtn.style.display = 'inline-block';
        }
      })
      .catch(() => {
        exportBtn.style.display = 'inline-block';
      });

    exportBtn.addEventListener('click', () => {
        document.getElementById('pdf-status').style.display = 'block';
        fetch("{{ path('app_article_export_pdf', {'id': article.id}) }}")
            .then(() => {
                const interval = setInterval(() => {
                    fetch(pdfUrl, { method: 'HEAD' })
                        .then(response => {
                            if (response.ok) {
                                button.href = pdfUrl;
                                container.style.display = 'block';
                                button.style.display = 'inline-block';
                                exportBtn.style.display = 'none';
                                document.getElementById('pdf-status').style.display = 'none';
                                clearInterval(interval);
                            }
                        })
                        .catch(() => {});
                }, 5000);
            });
    });
  });
</script>
{% endblock %}
